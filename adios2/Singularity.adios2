Bootstrap: docker
From: ubuntu:16.04


%labels
    MAINTAINER Sungsoo Ha (sungsooha@bnl.gov)


%setup
    # setup is run after the base 'ubuntu:16.04' image is
    # downloaded and unpacked but before entering the container
    # environment.
    # The current path on the local system will become your 
    # container's root directory
    echo ${SINGULARITY_ROOTFS}


%post
    # post is run after entering the container env.
    # need to install some development tools to build your code

    # Number of jobs when compiling
    JOBS=4

    # create directory
    mkdir -p /Downloads

    # ------------------------------------------------------------------------
    # Install necessary ubuntu packages
    # ------------------------------------------------------------------------
    apt-get update
    apt-get install -y apt-file
    apt-get update

    apt-get install -y build-essential wget git-core libtool libtool-bin autoconf subversion
    apt-get install -y gfortran pkg-config vim

    apt-get update
    apt-get install -y software-properties-common python-software-properties

    add-apt-repository ppa:ubuntu-toolchain-r/test
    apt-get update
    apt-get install -y gcc-8 g++-8
    update-alternatives \
        --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-8
    gcc --version
    g++ --version

    #add-apt-repository ppa:deadsnakes/ppa
    #apt-get update
    #apt-get install -y python3.8 python3.8-dev
    apt-get install -y python3 python3-dev
    apt-get install -y python3-pip python3-tk
    #pip3 install --upgrade pip

    #ls /usr/bin | grep python
    ln -sfn /usr/bin/python3.5 /usr/bin/python
    python --version
    python3 --version

    # install python venv
    pip3 install virtualenv

    # download ADIOSVM
    mkdir -p /Downloads/adiosvm
    git clone https://github.com/pnorbert/adiosvm.git /Downloads/adiosvm

    # ------------------------------------------------------------------------
    # Preparations to install ADIOS
    # ------------------------------------------------------------------------
    cd /opt
    virtualenv venv
    . /opt/venv/bin/activate
    which python3
    which python

    # 1. Linux Packages
    apt-get install -y openmpi-common openmpi-bin libopenmpi-dev
    apt-get install -y python-cheetah python-yaml

    # 2. Python/Numpy support
    pip3 install numpy mpi4py matplotlib

    # 3. CMake
    cd /Downloads
    wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.tar.gz
    tar xvfz cmake-3.13.4-Linux-x86_64.tar.gz -C /opt
    export PATH=${PATH}:/opt/cmake-3.13.4-Linux-x86_64/bin

    # 4. Staging support
    # a. libfabric is requried by the SST staging engine
    cd /Downloads
    wget https://github.com/ofiwg/libfabric/releases/download/v1.7.0/libfabric-1.7.0.tar.gz
    tar xvfz libfabric-1.7.0.tar.gz
    cd /Downloads/libfabric-1.7.0
    ./configure --disable-verbs --prefix=/opt/libfabric
    make
    make install
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/libfabric/lib

    # b. ZeroMQ is required by the DataMan staging engine
    apt-get install -y libzmq5 libzmq3-dev

    # 4. Compression libraries
    apt-get install -y bzip2 libbz2-dev zlib1g zlib1g-dev

    cd /Downloads/adiosvm/adiospackages
    tar zxf sz-1.4.13.0.tar.gz
    cd /Downloads/adiosvm/adiospackages/sz-1.4.13.0
    ./configure --prefix=/opt/SZ --with-pic --disable-shared --disable-fortran --disable-maintainer-mode
    make
    make install

    cd /Downloads
    git clone https://github.com/Blosc/c-blosc.git
    mkdir -p /Downloads/c-blosc/build
    cd /Downloads/c-blosc/build
    cmake -DCMAKE_INSTALL_PREFIX=/opt/blosc ..
    make 
    make install
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/blosc/lib

    # 5. Parallel HDF5 
    cd /Downloads/adiosvm/adiospackages
    tar jxf hdf5-1.8.17.tar.bz2
    mv hdf5-1.8.17 hdf5-1.8.17-parallel
    cd /Downloads/adiosvm/adiospackages/hdf5-1.8.17-parallel
    ./configure --with-zlib=/usr --without-szlib --prefix=/opt/hdf5-parallel --enable-parallel --enable-fortran --with-pic CC=mpicc FC=mpif90
    make -j$JOBS
    make install
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/hdf5-parallel/lib

    # ------------------------------------------------------------------------
    # ADIOS2 Installation
    # ------------------------------------------------------------------------
    cd /Downloads
    git clone https://github.com/ornladios/ADIOS2.git
    cd /Downloads/ADIOS2

    mkdir -p /Downloads/ADIOS2/build
    cd /Downloads/ADIOS2/build

    cmake -DCMAKE_INSTALL_PREFIX=/opt/adios2 \
          -DADIOS2_USE_MPI:BOOL=ON \
          -DADIOS2_USE_HDF5:BOOL=ON \
          -DADIOS2_USE_ZeroMQ:BOOL=ON \
          -DADIOS2_USE_Fortran:BOOL=ON \
          -DADIOS2_USE_Python:BOOL=ON \
          -DADIOS2_USE_SST:BOOL=ON \
          -DADIOS2_USE_BZip2:BOOL=ON \
          -DADIOS2_USE_ZFP:BOOL=OFF \
          -DADIOS2_USE_DataMan:BOOL=ON \
          -DADIOS2_USE_Profiling=OFF \
          -DADIOS2_USE_Blosc=ON \
          -DBUILD_SHARED_LIBS=ON \
          -DPYTHON_EXECUTABLE=/opt/venv/bin/python3 \
          -DLIBFABRIC_ROOT=/opt/libfabric \
          -DHDF5_ROOT=/opt/hdf5-parallel \
          -DSZ_ROOT=/opt/SZ \
          -DSZ_INCLUDE_DIR=/opt/SZ/include \
          -DSZ_LIBRARY=/opt/SZ/lib/libsz.a \
          -DBLOSC_INCLUDE_DIR=/opt/blosc/include \
          -DBLOSC_LIBRARY=/opt/blosc/lib/libblosc.a \
          -DADIOS2_BUILD_TESTING:BOOL=ON \
          -DADIOS2_BUILD_EXAMPLES_EXPERIMENTAL:BOOL=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DMPIEXEC_MAX_NUMPROCS:STRING=$JOBS \
          ..
    make -j$JOBS
    ctest

    make install
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/adios2/lib
    export PATH=${PATH}:/opt/adios2/bin
    export PYTHONPATH=${PYTHONPATH}:/opt/adios2/lib/python3.5/site-packages


%environment
    # define environment variables here
    # These vars will be set during calls to 'shell', 'exec',
    # or 'run' but will not be set during the previous 'post'
    # section of the recipe file.
    # So, if you need then, define them there as well!
    export PATH=${PATH}:/opt/cmake-3.13.4-Linux-x86_64/bin
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/libfabric/lib
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/blosc/lib
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/hdf5-parallel/lib
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/adios2/lib
    export PATH=${PATH}:/opt/adios2/bin
    export PYTHONPATH=${PYTHONPATH}:/opt/adios2/lib/python3.5/site-packages

%runscript
    # run script
    cd /Downloads/ADIOS2/build
    ctest

